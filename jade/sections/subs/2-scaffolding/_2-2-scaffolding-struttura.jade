// SCAFFOLDING - STRUTTURA
section
  h3 1.1 - Struttura di un'App
  h4 Folders-by-Type vs Folders-by-Feature
  p
    | Usare un approccio Folders-by-Feature piuttosto che il classico approccio Folders-by-Type
section
  h3 1.1 - Struttura di un'App
  h4
    i.fa.fa-close.fa-red
    | Folders-by-Type
  p
    | Molti progetti AngularJS mostrano una struttura ispirata da un approccio MVC, organizzando quindi i files con un approccio di
    em Folders-by-Type
    |  e cioè suddividendo le cartelle per controllers, viste, direttive, etc..
  small
    em
      strong Perchè no?
      br
      |                                 Al crescere del progetto la struttura risulta dispersiva, e non consente rintracciare facilmente le risorse del progetto, oltre che scomode da rendere riutilizzabili.
section
  h3 1.1 - Struttura di un'App
  h4
    i.fa.fa-close.fa-red
    | Folders-by-Type
  pre.no-default.
    \n
section
  h3 1.1 - Struttura di un'App
  h4
    i.fa.fa-check.fa-green
    | Folders-by-Feature
  p
    | L'approccio
    em Folders-by-Feature
    |  invece organizza i files per
    em funzionalità
    | , rendendo quindi la struttura più modulare.
    br
    | Infatti i files vengono organizzati in cartelle che hanno il nome per la funzionalità che rappresentano.
  small
    em
      strong Perchè si?
      br
      |                                 La struttura risulta quindi modulare! Lo sviluppatore può rintracciare facilmente il codice ed identificare ciò che rappresenta a colpo d'occhio. La struttura inoltre è piatta e non c'è ripetitività o nomi ridondanti.
section
  h3 1.1 - Struttura di un'App
  h4
    i.fa.fa-check.fa-green
    | Folders-by-Feature
  pre.no-default.
    \n
// END SCAFFOLDING - STRUTTURA