// ARCHITETTURA - MODULES
section
  +section-title-mini("fa-cogs", "Architettura", "Moduli")
  ul
    li
      h5 Un modulo principale
        small Il punto di partenza che funge da somma delle parti.
    li.fragment
      h5 Un modulo per le funzioni comuni
        small Separare le funzioni comuni in un modulo dedicato, per evitare dipendenze circolari tra sotto-moduli.
    li.fragment
      h5 Moduli piccoli ed autonomi
        small Limitare le funzionalità di ogni sotto-modulo ad una <span class="yellow">singola area semantica</span>.
    li.fragment
      h5 Coerenza nelle nomenclature
        small Usare un prefisso proprietario per distinguere facilmente il vostro codice da quello di terzi (evitare "<code>ng</code>"!).
  aside.notes
    p Una <em>singola area semantica</em> è un concetto molto vario che può significare tanto un singolo componente (es. una direttiva), come un'intera sezione dell'applicazione (quindi un insieme di configurazioni, servizi, controller e direttive).
section
  h3.yellow Dichiarazione moduli
  pre.small
    code.javascript.
      // Modulo principale
      angular.module('app', [ 'app.common', 'app.blog', 'app.user' ]);

      // Modulo comune
      angular.module('app.common', []);

      // Sotto moduli
      angular.module('app.user', [ 'app.common', 'ngRoute' ]);
      angular.module('app.blog', [ 'app.common', 'ngRoute', 'textAngular' ]);

  aside.notes
    p Il modulo <code>app.common</code> non ha dipendenze verso altri moduli dell'applicazione; questo risolve il problema delle dipendenze circolari.
    p I sottomoduli dichiarano di volta in volta le proprie dipendenze di terze parti.

// END ARCHITETTURA - MODULES
