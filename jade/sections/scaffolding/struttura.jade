// SCAFFOLDING - STRUTTURA
section
  +section-title-mini("fa-folder-open-o", "Scaffolding", "Struttura di un'Applicazione")
  h4 Folders-by-Type vs Folders-by-Feature
  p Usare un approccio
    em &nbsp;Folders-by-Feature&nbsp;
    | piuttosto che il classico approccio
    em &nbsp;Folders-by-Type&nbsp;
  aside.notes
    | [Qui note di presentazione]
//
  section
    +section-title-mini("fa-folder-open-o", "Scaffolding", "Struttura di un'Applicazione")
    h4
      i.fa.fa-close.fa-red
      | Folders-by-Type
    small
      | Approccio
      em &nbsp;MVC&nbsp;
      | (cartelle controllers, viste, direttive, etc..)
    small
      em
        strong Perchè no?
        br
        | Al crescere del progetto la struttura risulta dispersiva, e non consente di rintracciare facilmente le risorse del progetto, oltre che scomode da rendere riutilizzabili.
    hr
    h4
      i.fa.fa-check.fa-green
      | Folders-by-Feature
    small
      | L'approccio&nbsp;
      em Folders-by-Feature
      |  invece organizza i files per&nbsp;
      em funzionalità
    small
      em
        strong Perchè si?
        br
        | La struttura risulta quindi modulare!
        br
        | Lo sviluppatore può rintracciare facilmente il codice ed identificare ciò che rappresenta a colpo d'occhio.
        | La struttura inoltre è piatta e non c'è ripetitività o nomi ridondanti.
    aside.notes
      | [Qui note di presentazione]
section
  +section-title-mini("fa-folder-open-o", "Scaffolding", "Struttura di un'Applicazione")
  table(style="width:100%")
    tr
      td
        p
          i.fa.fa-close.fa-red.fa-fw
          | Folders-by-Type
        pre.smaller.nohighlight: code.
            app/
              app.module.js
              app.config.js
              app.routes.js
              directives.js
              controllers/
                  blog.js
                  shell.js
                  user.js
                  ...
              directives/
                  calendar.directive.js
                  calendar.directive.html
                  avatar.directive.js
                  avatar.directive.html
              services/
                  dataservice.js
                  localstorage.js
              views/
                  blog.html
                  user.html
                  sessions.html
                  shell.html
                  ...
      td
        p
          i.fa.fa-check.fa-green.fa-fw
          | Folders-by-Feature
        pre.smaller.nohighlight: code.
            app/
              app.module.js
              app.config.js
              app.routes.js
              components/
                  calendar.directive.js
                  calendar.directive.html
                  avatar.directive.js
                  avatar.directive.html
              layout/
                  shell.html
                  shell.controller.js
                  ...
              blog/
                  blog.html
                  blog.controller.js
              services/
                  data.service.js
                  localstorage.service.js
              user/
                  user.html
                  user.controller.js


  aside.notes
    p ByType - Al crescere del progetto la struttura risulta dispersiva, e non consente di rintracciare facilmente le risorse del progetto, oltre che scomode da rendere riutilizzabili.
    p
      | ByFeature - Lo sviluppatore può rintracciare facilmente il codice ed identificare ciò che rappresenta a colpo d'occhio.
      br
      | La struttura inoltre è piatta e non c'è ripetitività o nomi ridondanti.
    p Config File & Route File
    p File HTML nella stessa cartella?
// END SCAFFOLDING - STRUTTURA